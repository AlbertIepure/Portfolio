.version "MW FrontEnd (mwfe:V.18) for the Enterprise Compiler ( V4.0 ),  compiled the Feb 28 2008 at 20:55:25"
.source "C:\Documents and Settings\Sorin\Desktop\Tema PSC\442G_Iepure_Albert\src\starcore_main.c"
.conf "d:\enterprise\production2.52\etc/proc.config"

.file 0 "C:\Documents and Settings\Sorin\Desktop\Tema PSC\442G_Iepure_Albert\src\starcore_main.c"
.file 1 "C:\Documents and Settings\Sorin\Desktop\Tema PSC\442G_Iepure_Albert\src\functions.h"
.file 2 "C:\Documents and Settings\Sorin\Desktop\Tema PSC\442G_Iepure_Albert\src\constants.h"
.file 3 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\ansi_parms.h"
.file 4 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\cstddef"
.file 5 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\stddef.h"
.file 6 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\ioprim.h"
.file 7 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\cstdarg"
.file 8 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\cstdio"
.file 9 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\os_enum.h"
.file 10 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\ansi_prefix_StarCore.h"
.file 11 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\mslGlobals.h"
.file 12 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\msl_c_version.h"
.file 13 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\stdio.h"
.file 14 "C:\Program Files\Freescale\CodeWarrior for StarCore 3.2\StarCore_Support\compiler\include\prototype.h"

.No_Min_BF_Size
.No_Sup_LL_D
.Emit_RefByAddr
.Use_mwfe
.min_struct_align = 4

.type
     .td 0 _FILE .ut 1 ;                                     (1; 18; 8)
     .td 1 _Word16 .si;                                      (1; 40; 14)
     .td 2 _size_t .ui;                                      (1; 16; 4)
     .ut 1 24 $T00000462 .struct (__cnt 0 4 .td -1 .i, __flag 4 4 .td -1 .i, __file 8 4 .td -1 .i, __bufsiz 12 4 .td -1 .i, __buffer 16 4 .td -1 .p .uc, __ptr 20 4 .td -1 .p .uc);	(0;0;0)

.extern
     _fopen, 4, .td 0 , .func (.p .c ( .cons ) , .p .c ( .cons ) ) .p .ut 1 , .extern[Call_Convention=1];	(0;0;0)
     _fread, 4, .td 2 , .func (.p .v, .ui, .ui, .p .ut 1 ) .ui, .extern[Call_Convention=1];	(0;0;0)
     _printf, 4, .td -1 , .func (.p .c ( .cons ) , ...) .i, .extern[Call_Convention=1];	(0;0;0)
     _fclose, 4, .td -1 , .func (.p .ut 1 ) .i, .extern[Call_Convention=1];	(0;0;0)
     _signalenergy, 2, .td 1 , .func (.p .si) .si, .extern[Call_Convention=1];	(0;0;0)

.global "starcore_main"
     _main, 4, .td -1 , .func () .i;                         (1; 6; 0)

.module "starcore_main"


.static
     $S457, 9 [1], .td -1 , .arr 9 .c, .has_ref_by_address;  (0;0;0)
     $S458, 4 [1], .td -1 , .arr 4 .c, .has_ref_by_address;  (0;0;0)
     $S459, 16 [1], .td -1 , .arr 16 .c, .has_ref_by_address;	(0;0;0)

.init
     .m9 $S457 = [.c 46, .c 46, .c 47, .c 97, .c 46, .c 100, .c 97, .c 116, .c 0 ];	(0;0;0)
     .m4 $S458 = [.c 114, .c 43, .c 98, .c 0 ];              (0;0;0)
     .m16 $S459 = [.c 10, .c 67, .c 111, .c 117, .c 108, .c 100, .c 32, .c 110, .c 111, .c 116, .c 32, .c 111, .c 112, .c 101, .c 110, .c 0 ];	(0;0;0)

.labelcount 3

.entry _main			 6; 20
.callcount 6
.tempcount 15
.local
     _fp, 4 [4], .td 0 , .p .ut 1 ;                          (6; 10; 0)
     _a, 80 [2], .td 1 , .arr 40 .si, .align 8;              (8; 8; 0)
.code

     .p $t2 = .p  &$S457;                                    (1; 12; 0)
     .p $t3 = .p  &$S458;                                    (1; 12; 0)
     param .p $t3, 1, 2;                                     (1; 12; 0)
     param .p $t2, 1, 1;                                     (1; 12; 0)
     call .p  &_fopen, 1, .p _fp;                            (1; 12; 0)
     .p:.p $t5 = .p  &_a;                                    (1; 13; 0)
     .ui $t6 = .ui 0x2;                                      (1; 13; 0)
     .ui $t7 = .ui 0x28;                                     (1; 13; 0)
     .p $t8 = .p _fp;                                        (1; 13; 0)
     param .p $t8, 2, 4;                                     (1; 13; 0)
     param .ui $t7, 2, 3;                                    (1; 13; 0)
     param .ui $t6, 2, 2;                                    (1; 13; 0)
     param .p $t5, 2, 1;                                     (1; 13; 0)
     call .p  &_fread, 2, .ui $t4;                           (1; 13; 0)
     if (.p _fp != .p 0) goto L1;                            (1; 14; 0)
L2:
     .p $t10 = .p  &$S459;                                   (5; 15; 0)
     param .p $t10, 3, 1;                                    (5; 15; 0)
     call .p  &_printf, 3, .i $t9;                           (5; 15; 0)
L1:
     .p $t12 = .p _fp;                                       (1; 16; 0)
     param .p $t12, 4, 1;                                    (1; 16; 0)
     call .p  &_fclose, 4, .i $t11;                          (1; 16; 0)
     .p $t14 = .p  &_a;                                      (1; 18; 0)
     param .p $t14, 5, 1;                                    (1; 18; 0)
     call .p  &_signalenergy, 5, .si $t13;                   (1; 18; 0)
     return .i 0;                                            (1; 19; 0)
.end_entry _main



.debug
#define L_tmpnam 9                                                (0;0;0)
#define write_2l(addr,src1,src2) {write_l(addr, src1); write_l(addr, src2);}	(0;0;0)
#define __FILE__                                                  (0;0;0)
#define __CWBE__                                                  (0;0;0)
#define offsetof(type,member) ((size_t)&(((type*)0)->member))     (0;0;0)
#define _IOWRITE 0x0008                                           (0;0;0)
#define __option                                                  (0;0;0)
#define _MSL_C99 0                                                (0;0;0)
#define _MSL_TIME_T_IS_LOCALTIME 1                                (0;0;0)
#define L_negate(v) _L_negate(v)                                  (0;0;0)
#define ExtractU(v1,v2) _ExtractU(v1,v2)                          (0;0;0)
#define __STDDEF                                                  (0;0;0)
#define setsat32() _setsat32()                                    (0;0;0)
#define va_start(_ap,_parmN) (void)(_ap = (va_list)&_parmN)       (0;0;0)
#define SEEK_SET 0                                                (0;0;0)
#define __LINE__                                                  (0;0;0)
#define setSRbit(v) _setSRbit(v)                                  (0;0;0)
#define write_4b(addr,s1,s2,s3,s4) {write_b(addr, s1); write_b(addr, s2); write_b(addr, s3); write_b(addr, s4);}	(0;0;0)
#define Write_64(v1,v2) *(v1) = (v2)                              (0;0;0)
#define X_extend(v) _X_extend(v)                                  (0;0;0)
#define __IA64_CPP_ABI__                                          (0;0;0)
#define __SIZE_T                                                  (0;0;0)
#define __CASM__                                                  (0;0;0)
#define SVC_READ 2                                                (0;0;0)
#define _MSL_BEGIN_NAMESPACE_STD                                  (0;0;0)
#define _MSL_DOUBLE_SIZE 32                                       (0;0;0)
#define SVC_SEEK 5                                                (0;0;0)
#define __CWCC__                                                  (0;0;0)
#define __STDC__                                                  (0;0;0)
#define V_swapb2(src_vect) _V_swapb2(src_vect)                    (0;0;0)
#define V_read_w(src_mem,dst_vect) _V_read_w(src_mem, dst_vect)   (0;0;0)
#define setalign(src) _setalign(src)                              (0;0;0)
#define __STDC_VERSION__                                          (0;0;0)
#define V_satu2b(src_vect) _V_satu2b(src_vect)                    (0;0;0)
#define div_iter(v1,v2) _div_iter(v1,v2)                          (0;0;0)
#define __mac_os 1                                                (0;0;0)
#define _MW_SCC_VERSION_ 0x308                                    (0;0;0)
#define __MODE_T                                                  (0;0;0)
#define NON_FILE -1                                               (0;0;0)
#define SVC_OPEN 3                                                (0;0;0)
#define _CW_X_NEW_SHR_R_                                          (0;0;0)
#define _ALIGNIT(_ap,_type) ( ( ( (unsigned int) ((_ap)-(_INTSIZEOF(_type))) ) & (sizeof(_type)<8?~3:~7) ) ) + (_INTSIZEOF(_type)-sizeof(_type))	(0;0;0)
#define __n64_os 11                                               (0;0;0)
#define __L_XTND 2                                                (0;0;0)
#define __O_RDWR 0x0002                                           (0;0;0)
#define _MSL_C_VERSION_H                                          (0;0;0)
#define __L_INCR 1                                                (0;0;0)
#define saturate(v) _sat(v)                                       (0;0;0)
#define __DATE__                                                  (0;0;0)
#define setnosat() _setnosat()                                    (0;0;0)
#define _MSL_LOCALDATA_AVAILABLE 1                                (0;0;0)
#define writeOSP(v) _writeOSP(v)                                  (0;0;0)
#define setcnvrm() _setcnvrm()                                    (0;0;0)
#define __TIME__                                                  (0;0;0)
#define SEEK_CUR 1                                                (0;0;0)
#define Ovl_Load_Address(v) _Ovl_Load_Address(v)                  (0;0;0)
#define _MSL_SIZE_T_TYPE unsigned int                             (0;0;0)
#define SEEK_END 2                                                (0;0;0)
#define __global()                                                (0;0;0)
#define __dest_os __starcore_bare                                 (0;0;0)
#define SVC_WRITE 1                                               (0;0;0)
#define __palm_os 19                                              (0;0;0)
#define clearILIN() clearEMRbit(0)                                (0;0;0)
#define V_impysu2(src_vect1,src_vect2) _V_impysu2(src_vect1, src_vect2)	(0;0;0)
#define __WCHAR_T                                                 (0;0;0)
#define shl_nosat(v1,v2) _shl_nosat(v1,v2)                        (0;0;0)
#define X_sub_sat(v1,v2) _X_sub_sat(v1,v2)                        (0;0;0)
#define _MSL_END_EXTERN_C                                         (0;0;0)
#define _MSL_ASSERT_DISPLAYS_FUNC 0                               (0;0;0)
#define V_mult_lh(var1,var2) _V_mult_lh(var1, var2)               (0;0;0)
#define V_mult_ll(var1,var2) _V_mult_ll(var1, var2)               (0;0;0)
#define V_tfrw_hh(dest,src) _V_tfrw_hh(dest, src)                 (0;0;0)
#define V_tfrw_hl(dest,src) _V_tfrw_hl(dest, src)                 (0;0;0)
#define cw_assert(v) _cw_assert(v)                                (0;0;0)
#define __env_var                                                 (0;0;0)
#define clearDOVF() clearEMRbit(2)                                (0;0;0)
#define V_L_mult_hh_round(var1,var2) _V_L_mult_hh_round(var1, var2)	(0;0;0)
#define V_L_mult_hl_round(var1,var2) _V_L_mult_hl_round(var1, var2)	(0;0;0)
#define clearILST() clearEMRbit(1)                                (0;0;0)
#define _MSL_ANSI_PARMS_H                                         (0;0;0)
#define _MSL_OS_DISK_FILE_SUPPORT 1                               (0;0;0)
#define V_dummy_read_2x32(src1,src2) _V_dummy_read_2x32(src1, src2)	(0;0;0)
#define D_get_lsb(v) _D_get_lsb(v)                                (0;0;0)
#define V_read_fr(src_mem,dst_vect) _V_read_fr(src_mem, dst_vect) (0;0;0)
#define D_add_opt(v1,v2) _D_add_opt(v1,v2)                        (0;0;0)
#define D_get_msb(v) _D_get_msb(v)                                (0;0;0)
#define __emb_68k 13                                              (0;0;0)
#define _ENTERPRISE_MWFE_ 1                                       (0;0;0)
#define _MSL_NEEDS_EXTRAS 0                                       (0;0;0)
#define __sh_bare 15                                              (0;0;0)
#define V_L_mult_ll_round(var1,var2) _V_L_mult_ll_round(var1, var2)	(0;0;0)
#define __O_TRUNC 0x0010                                          (0;0;0)
#define X_abs_sat(v) _X_abs_sat(v)                                (0;0;0)
#define L_mult_sl(v1,v2) _L_mult_sl(v1,v2)                        (0;0;0)
#define X_add_sat(v1,v2) _X_add_sat(v1,v2)                        (0;0;0)
#define FOPEN_MAX 32                                              (0;0;0)
#define shr_nosat(v1,v2) _shr_nosat(v1,v2)                        (0;0;0)
#define V_pack_2w(src_var1,src_var2) _V_pack_2w(src_var1, src_var2)	(0;0;0)
#define __SSIZE_T                                                 (0;0;0)
#define V_mult_hh(var1,var2) _V_mult_hh(var1, var2)               (0;0;0)
#define __O_CREAT 0x0008                                          (0;0;0)
#define clearNMID() clearEMRbit(3)                                (0;0;0)
#define V_mult_hl(var1,var2) _V_mult_hl(var1, var2)               (0;0;0)
#define SVC_CLOSE 4                                               (0;0;0)
#define V_L_mult_lh_round(var1,var2) _V_L_mult_lh_round(var1, var2)	(0;0;0)
#define L_mult_ls(v1,v2) _L_mult_ls(v1,v2)                        (0;0;0)
#define X_shl_sat(v1,v2) _X_shl_sat(v1,v2)                        (0;0;0)
#define V_imacsu2(src_vect1,src_vect2,src_vect3) _V_add2_20Component((src_vect3), _V_imacsu2_mpy((src_vect1), (src_vect2)))	(0;0;0)
#define V_tfrw_lh(dest,src) _V_tfrw_lh(dest, src)                 (0;0;0)
#define V_tfrw_ll(dest,src) _V_tfrw_ll(dest, src)                 (0;0;0)
#define extract_h(v) _extract_msb(v)                              (0;0;0)
#define extract_l(v) _extract_lsb(v)                              (0;0;0)
#define V_X_mac_lh(X_var3,var1,var2) (X_add((X_var3),V_X_mult_lh_add((var1), (var2))))	(0;0;0)
#define V_X_mac_ll(X_var3,var1,var2) (X_add((X_var3),V_X_mult_ll_add((var1), (var2))))	(0;0;0)
#define D_mult_msp(v1,v2) _D_mult_msp(v1,v2)                      (0;0;0)
#define V_X_msu_hh(X_var3,var1,var2) (X_sub((X_var3),V_X_mult_hh_sub((var1), (var2))))	(0;0;0)
#define V_X_msu_hl(X_var3,var1,var2) (X_sub((X_var3),V_X_mult_hl_sub((var1), (var2))))	(0;0;0)
#define ei() _ei()                                                (0;0;0)
#define __arm_bare 20                                             (0;0;0)
#define V_read2_2b(src_mem) _V_read2_2b(src_mem)                  (0;0;0)
#define V_mac_r_lh(L_var3,var1,var2) (round(L_add((L_var3),V_L_mult_lh_round((var1), (var2)))))	(0;0;0)
#define V_mac_r_ll(L_var3,var1,var2) (round(L_add((L_var3),V_L_mult_ll_round((var1), (var2)))))	(0;0;0)
#define __win32_os 3                                              (0;0;0)
#define mult_nomac(v1,v2) _mult_nomac(v1,v2)                      (0;0;0)
#define clearSRbit(v) _clearSRbit(v)                              (0;0;0)
#define __O_RDONLY 0x0000                                         (0;0;0)
#define V_sod2aaxx(src_vect1,src_vect2) _V_sod2aaxx(src_vect1, src_vect2)	(0;0;0)
#define _MSL_NULL_CONSOLE_ROUTINES 0                              (0;0;0)
#define V_msu_r_hh(L_var3,var1,var2) (round(L_sub((L_var3),V_L_mult_hh_sub_round((var1), (var2)))))	(0;0;0)
#define V_msu_r_hl(L_var3,var1,var2) (round(L_sub((L_var3),V_L_mult_hl_sub_round((var1), (var2)))))	(0;0;0)
#define V_sod2saxx(src_vect1,src_vect2) _V_sod2saxx(src_vect1, src_vect2)	(0;0;0)
#define _MSL_IMP_EXP_SIOUX _MSL_IMP_EXP                           (0;0;0)
#define __wince_os 5                                              (0;0;0)
#define _MSL_LITTLE_ENDIAN 0                                      (0;0;0)
#define V_sod2aaii(src_vect1,src_vect2) _V_sod2aaii(src_vect1, src_vect2)	(0;0;0)
#define V_read2_4b(src_mem,dst_vect1,dst_vect2) *dst_vect1 = _V_read2_2b4(src_mem), *dst_vect2 = _V_read2_2b4(0)	(0;0;0)
#define __O_APPEND 0x0004                                         (0;0;0)
#define V_sod2saii(src_vect1,src_vect2) _V_sod2saii(src_vect1, src_vect2)	(0;0;0)
#define V_L_mac_lh(L_var3,var1,var2) (L_add((L_var3),V_L_mult_lh_add((var1), (var2))))	(0;0;0)
#define V_L_mac_ll(L_var3,var1,var2) (L_add((L_var3),V_L_mult_ll_add((var1), (var2))))	(0;0;0)
#define V_sub_w_lh(src_vect1,src_vect2) _V_sub_w_lh(src_vect1, src_vect2)	(0;0;0)
#define V_sub_w_ll(src_vect1,src_vect2) _V_sub_w_ll(src_vect1, src_vect2)	(0;0;0)
#define V_L_msu_hh(L_var3,var1,var2) (L_sub((L_var3),V_L_mult_hh_sub((var1), (var2))))	(0;0;0)
#define __mac_os_x 17                                             (0;0;0)
#define SVC_UNLINK 7                                              (0;0;0)
#define V_L_msu_hl(L_var3,var1,var2) (L_sub((L_var3),V_L_mult_hl_sub((var1), (var2))))	(0;0;0)
#define V_add_w_lh(src_vect1,src_vect2) _V_add_w_lh(src_vect1, src_vect2)	(0;0;0)
#define V_add_w_ll(src_vect1,src_vect2) _V_add_w_ll(src_vect1, src_vect2)	(0;0;0)
#define __ppc_eabi 6                                              (0;0;0)
#define __O_WRONLY 0x0001                                         (0;0;0)
#define V_X_mac_hh(X_var3,var1,var2) (X_add((X_var3),V_X_mult_hh_add((var1), (var2))))	(0;0;0)
#define __O_BINARY 0x0020                                         (0;0;0)
#define V_X_mac_hl(X_var3,var1,var2) (X_add((X_var3),V_X_mult_hl_add((var1), (var2))))	(0;0;0)
#define V_X_msu_lh(X_var3,var1,var2) (X_sub((X_var3),V_X_mult_lh_sub((var1), (var2))))	(0;0;0)
#define V_sod2asxx(src_vect1,src_vect2) _V_sod2asxx(src_vect1, src_vect2)	(0;0;0)
#define _MSL_C_LOCALE_ONLY 0                                      (0;0;0)
#define V_X_msu_ll(X_var3,var1,var2) (X_sub((X_var3),V_X_mult_ll_sub((var1), (var2))))	(0;0;0)
#define V_sod2ssxx(src_vect1,src_vect2) _V_sod2ssxx(src_vect1, src_vect2)	(0;0;0)
#define D_mult_opt(v1,v2) _D_mult_opt(v1,v2)                      (0;0;0)
#define neg_norm_l(v) _neg_norm_l(v)                              (0;0;0)
#define V_sod2asii(src_vect1,src_vect2) _V_sod2asii(src_vect1, src_vect2)	(0;0;0)
#define V_add2_20Component(src_vect1,src_vect2) _V_add2_20Component(src_vect1, src_vect2)	(0;0;0)
#define SVC_RENAME 6                                              (0;0;0)
#define V_sod2ssii(src_vect1,src_vect2) _V_sod2ssii(src_vect1, src_vect2)	(0;0;0)
#define neg_norm_s(v) _neg_norm_s(v)                              (0;0;0)
#define V_mac_r_hh(L_var3,var1,var2) (round(L_add((L_var3),V_L_mult_hh_round((var1), (var2)))))	(0;0;0)
#define __MWERKS__                                                (0;0;0)
#define V_mac_r_hl(L_var3,var1,var2) (round(L_add((L_var3),V_L_mult_hl_round((var1), (var2)))))	(0;0;0)
#define BIG_ENDIAN 1                                              (0;0;0)
#define _MSL_CDECL                                                (0;0;0)
#define _INTSIZEOF(_type) ( (sizeof(_type) + sizeof(int) - 1) & ~(sizeof(int) - 1) )	(0;0;0)
#define V_msu_r_lh(L_var3,var1,var2) (round(L_sub((L_var3),V_L_mult_lh_sub_round((var1), (var2)))))	(0;0;0)
#define V_msu_r_ll(L_var3,var1,var2) (round(L_sub((L_var3),V_L_mult_ll_sub_round((var1), (var2)))))	(0;0;0)
#define V_read2_8b(src_mem,dst_vect1,dst_vect2,dst_vect3,dst_vect4) *dst_vect1 = _V_read2_2b8(src_mem), *dst_vect2 = _V_read2_2b8(0), *dst_vect3 = _V_read2_2b8(0), *dst_vect4 = _V_read2_2b8(0)	(0;0;0)
#define __undef_os 0                                              (0;0;0)
#define V_L_mac_hh(L_var3,var1,var2) (L_add((L_var3),V_L_mult_hh_add((var1), (var2))))	(0;0;0)
#define V_L_mac_hl(L_var3,var1,var2) (L_add((L_var3),V_L_mult_hl_add((var1), (var2))))	(0;0;0)
#define _MSL_FILE_CONSOLE_ROUTINES 1                              (0;0;0)
#define V_pack_2fr(src_var1,src_var2) _V_pack_2fr(src_var1, src_var2)	(0;0;0)
#define V_sub_w_hh(src_vect1,src_vect2) _V_sub_w_hh(src_vect1, src_vect2)	(0;0;0)
#define V_sub_w_hl(src_vect1,src_vect2) _V_sub_w_hl(src_vect1, src_vect2)	(0;0;0)
#define _MSL_DO_NOT_INLINE __inline                               (0;0;0)
#define V_L_msu_lh(L_var3,var1,var2) (L_sub((L_var3),V_L_mult_lh_sub((var1), (var2))))	(0;0;0)
#define V_L_msu_ll(L_var3,var1,var2) (L_sub((L_var3),V_L_mult_ll_sub((var1), (var2))))	(0;0;0)
#define di() _di()                                                (0;0;0)
#define V_add_w_hh(src_vect1,src_vect2) _V_add_w_hh(src_vect1, src_vect2)	(0;0;0)
#define _MSL_POSIX 0                                              (0;0;0)
#define V_add_w_hl(src_vect1,src_vect2) _V_add_w_hl(src_vect1, src_vect2)	(0;0;0)
#define __cplusplus                                               (0;0;0)
#define V_unpack_2w(src_vect,dst_var1,dst_var2) *(dst_var1) = _V_unpack_2w1((src_vect)), *(dst_var2) = _V_unpack_2w1((src_vect))	(0;0;0)
#define _MSL_INLINE __inline                                      (0;0;0)
#define V_mult_r_lh(var1,var2) _V_mult_r_lh(var1, var2)           (0;0;0)
#define mpysu_shr16(v1,v2) _mpysu_shr16(v1,v2)                    (0;0;0)
#define V_mult_r_ll(var1,var2) _V_mult_r_ll(var1, var2)           (0;0;0)
#define X_extract_h(v) _X_extract_h(v)                            (0;0;0)
#define V_read2_2ub(src_mem) _V_read2_2ub(src_mem)                (0;0;0)
#define X_extract_l(v) _X_extract_l(v)                            (0;0;0)
#define L_shr_nosat(v1,v2) _L_shr_nosat(v1,v2)                    (0;0;0)
#define V_read2_4ub(src_mem,dst_vect1,dst_vect2) *dst_vect1 = _V_read2_2ub4(src_mem), *dst_vect2 = _V_read2_2ub4(0)	(0;0;0)
#define V_write2_2b(dst_mem,src_vect) _V_write2_2b(dst_mem, src_vect)	(0;0;0)
#define min(v1,v2) _min(v1,v2)                                    (0;0;0)
#define D_extract_h(v) _D_get_msb(v)                              (0;0;0)
#define _MSL_ANSI_PREFIX_STARCORE_H                               (0;0;0)
#define D_extract_l(v) _D_get_lsb(v)                              (0;0;0)
#define max(v1,v2) _max(v1,v2)                                    (0;0;0)
#define __m56300_os 14                                            (0;0;0)
#define EOF (-1)                                                  (0;0;0)
#define shl(v1,v2) _shl(v1,v2)                                    (0;0;0)
#define __m56800_os 10                                            (0;0;0)
#define shr(v1,v2) _shr(v1,v2)                                    (0;0;0)
#define Extract_reg(v1,v2) _Extract_reg(v1,v2)                    (0;0;0)
#define MSL_IMP_EXP                                               (0;0;0)
#define V_read2_8ub(src_mem,dst_vect1,dst_vect2,dst_vect3,dst_vect4) *dst_vect1 = _V_read2_2ub8(src_mem), *dst_vect2 = _V_read2_2ub8(0), *dst_vect3 = _V_read2_2ub8(0), *dst_vect4 = _V_read2_2ub8(0)	(0;0;0)
#define neg_norm_ll(L_var1) _neg_norm_ll(L_var1)                  (0;0;0)
#define V_L_mult_hh(var1,var2) _V_L_mult_hh(var1, var2)           (0;0;0)
#define V_L_mult_hl(var1,var2) _V_L_mult_hl(var1, var2)           (0;0;0)
#define V_X_mult_hh(var1,var2) _V_X_mult_hh(var1, var2)           (0;0;0)
#define V_X_mult_hl(var1,var2) _V_X_mult_hl(var1, var2)           (0;0;0)
#define V_write2_4b(dst_mem,src_vect1,src_vect2) _V_write2_2b4(dst_mem, src_vect1), _V_write2_2b4(0, src_vect2)	(0;0;0)
#define L_deposit_h(v) _deposit_msb(v)                            (0;0;0)
#define add(v1,v2) _add(v1,v2)                                    (0;0;0)
#define L_deposit_l(v) _deposit_lsb(v)                            (0;0;0)
#define _MSL_CSTDIO                                               (0;0;0)
#define __CWBUILD__                                               (0;0;0)
#define V_read2_2b4(src_mem) _V_read2_2b4(src_mem)                (0;0;0)
#define V_read2_2b8(src_mem) _V_read2_2b8(src_mem)                (0;0;0)
#define V_mult_r_hh(var1,var2) _V_mult_r_hh(var1, var2)           (0;0;0)
#define V_mult_r_hl(var1,var2) _V_mult_r_hl(var1, var2)           (0;0;0)
#define __DSPQC16__                                               (0;0;0)
#define L_shl_nosat(v1,v2) _L_shl_nosat(v1,v2)                    (0;0;0)
#define __VERSION__ "Prodution 3.0 Build 22"                      (0;0;0)
#define _MSL_DEFAULT_LOCALE 1                                     (0;0;0)
#define clearEMRbit(v) _clearEMRbit(v)                            (0;0;0)
#define _MSL_HEAP_EXTERN_PROTOTYPES extern char StackStart[]; extern char TopOfStack[];	(0;0;0)
#define V_X_mult_lh(var1,var2) _V_X_mult_lh(var1, var2)           (0;0;0)
#define V_X_mult_ll(var1,var2) _V_X_mult_ll(var1, var2)           (0;0;0)
#define _MSL_BEGIN_EXTERN_C                                       (0;0;0)
#define _MSL_PTRDIFF_T_TYPE long                                  (0;0;0)
#define sub(v1,v2) _sub(v1,v2)                                    (0;0;0)
#define V_L_mult_lh(var1,var2) _V_L_mult_lh(var1, var2)           (0;0;0)
#define V_L_mult_ll(var1,var2) _V_L_mult_ll(var1, var2)           (0;0;0)
#define __mips_bare 9                                             (0;0;0)
#define mpyus_shr16(v1,v2) _mpyus_shr16(v1,v2)                    (0;0;0)
#define V_write2_8b(dst_mem,src_vect1,src_vect2,src_vect3,src_vect4) _V_write2_2b8(dst_mem, src_vect1), _V_write2_2b8(0, src_vect2), _V_write2_2b8(0, src_vect3), _V_write2_2b8(0, src_vect4)	(0;0;0)
#define _MSL_FLOATING_POINT 1                                     (0;0;0)
#define add2(v1,v2) _add2(v1,v2)                                  (0;0;0)
#define _MSL_USING_NAMESPACE                                      (0;0;0)
#define __mcore_bare 12                                           (0;0;0)
#define X_or(v1,v2) _X_or(v1,v2)                                  (0;0;0)
#define __embedded_cplusplus                                      (0;0;0)
#define sub2(v1,v2) _sub2(v1,v2)                                  (0;0;0)
#define Get_Overflow() _Get_Overflow()                            (0;0;0)
#define FILENAME_MAX 256                                          (0;0;0)
#define _MSL_ATTRIBUTE_CONST __attribute__((const))               (0;0;0)
#define V_read2_2ub4(src_mem) _V_read2_2ub4(src_mem)              (0;0;0)
#define V_write2_2b4(dst_mem,src_vect) _V_write2_2b4(dst_mem, src_vect)	(0;0;0)
#define V_read2_2ub8(src_mem) _V_read2_2ub8(src_mem)              (0;0;0)
#define V_write2_2b8(dst_mem,src_vect) _V_write2_2b8(dst_mem, src_vect)	(0;0;0)
#define ExtractU_reg(v1,v2) _ExtractU_reg(v1,v2)                  (0;0;0)
#define X_ror_unsafe(v) _X_ror_unsafe(v)                          (0;0;0)
#define _MSL_IMP_EXP_RUNTIME _MSL_IMP_EXP                         (0;0;0)
#define NULL 0                                                    (0;0;0)
#define getc(p) fgetc(p)                                          (0;0;0)
#define min2(v1,v2) _min2(v1,v2)                                  (0;0;0)
#define __IA64_CPP_ABI_ARM__                                      (0;0;0)
#define Set_Overflow(v) _Set_Overflow(v)                          (0;0;0)
#define L_mult_nomac(v1,v2) _L_mult_nomac(v1,v2)                  (0;0;0)
#define X_rol_unsafe(v) _X_rol_unsafe(v)                          (0;0;0)
#define _MSL_OS_TIME_SUPPORT 1                                    (0;0;0)
#define max2(v1,v2) _max2(v1,v2)                                  (0;0;0)
#define _MSL_CSTDDEF                                              (0;0;0)
#define _CW_X_PROTO_                                              (0;0;0)
#define minu(v1,v2) _minu(v1,v2)                                  (0;0;0)
#define _MSL_CONSOLE_SUPPORT 1                                    (0;0;0)
#define mult(v1,v2) _mult(v1,v2)                                  (0;0;0)
#define __FARSCAPE__                                              (0;0;0)
#define V_unpack_2w1(src_vect) _V_unpack_2w1(src_vect)            (0;0;0)
#define maxm(v1,v2) _maxm(v1,v2)                                  (0;0;0)
#define V_pack_hh_ll(src_vect1,src_vect2) _V_pack_hh_ll(src_vect1, src_vect2)	(0;0;0)
#define trap() asm(" trap")                                       (0;0;0)
#define maxu(v1,v2) _maxu(v1,v2)                                  (0;0;0)
#define load_fr_ext_val_none(v) _load_fr_ext_val_none(v)          (0;0;0)
#define __ide_target                                              (0;0;0)
#define V_pack_hl_lh(src_vect1,src_vect2) _V_pack_hl_lh(src_vect1, src_vect2)	(0;0;0)
#define _MSL_FLT_EVAL_METHOD 0                                    (0;0;0)
#define syncm_read_b(src) _syncm_read_b(src)                      (0;0;0)
#define wait() asm(" wait")                                       (0;0;0)
#define load_lfr_ext_val_val(v) _load_lfr_ext_val_val(v)          (0;0;0)
#define _MW_SCC_VER_ 3.0                                          (0;0;0)
#define syncm_read_l(src) _syncm_read_l(src)                      (0;0;0)
#define Clip(v1,v2) _Clip(v1,v2)                                  (0;0;0)
#define mark() asm(" mark")                                       (0;0;0)
#define syncm_read_w(src) _syncm_read_w(src)                      (0;0;0)
#define V_pack_lh_hl(src_vect1,src_vect2) _V_pack_lh_hl(src_vect1, src_vect2)	(0;0;0)
#define _MW_SCC_PATCH_LEVEL_ 420081449                            (0;0;0)
#define stop() asm(" stop")                                       (0;0;0)
#define __m56800E_os 16                                           (0;0;0)
#define V_pack_ll_hh(src_vect1,src_vect2) _V_pack_ll_hh(src_vect1, src_vect2)	(0;0;0)
#define _MSL_IMP_EXP                                              (0;0;0)
#define _MSL_CSTDARG                                              (0;0;0)
#define __dolphin_os 18                                           (0;0;0)
#define putc(x,p) fputc(x,p)                                      (0;0;0)
#define _MSL_OS_ALLOC_SUPPORT 0                                   (0;0;0)
#define __nec_eabi_os 8                                           (0;0;0)
#define V_L_mult_ll_sub_round(var1,var2) _V_L_mult_ll_sub_round(var1, var2)	(0;0;0)
#define L_msu(L_var3,var1,var2) (L_sub(L_var3,L_mult(var1, var2)))	(0;0;0)
#define _MSL_MATH_ERRHANDLING 1                                   (0;0;0)
#define X_sub(v1,v2) _X_sub(v1,v2)                                (0;0;0)
#define _MSL_TIME_T_AVAILABLE 1                                   (0;0;0)
#define __PROTOTYPE_H                                             (0;0;0)
#define _MSL_PTHREADS 0                                           (0;0;0)
#define X_set(v1,v2) _X_set(v1,v2)                                (0;0;0)
#define syncio_read_b(src) _syncio_read_b(src)                    (0;0;0)
#define syncio_read_l(src) _syncio_read_l(src)                    (0;0;0)
#define div_s(v1,v2) _div_s(v1,v2)                                (0;0;0)
#define _MSL_BUFFERED_CONSOLE 1                                   (0;0;0)
#define D_mac(D_var3,L_var1,L_var2) D_add((D_var3),D_mult((L_var1),(L_var2)))	(0;0;0)
#define X_rol(v) _X_rol(v)                                        (0;0;0)
#define V_L_mult_hl_sub_round(var1,var2) _V_L_mult_hl_sub_round(var1, var2)	(0;0;0)
#define syncio_read_w(src) _syncio_read_w(src)                    (0;0;0)
#define __MSL_BUILD__ 06                                          (0;0;0)
#define D_sat(v) _D_sat(v)                                        (0;0;0)
#define X_ror(v) _X_ror(v)                                        (0;0;0)
#define msu_r(L_var3,var1,var2) (round(L_sub(L_var3,L_mult(var1, var2))))	(0;0;0)
#define D_add(v1,v2) _D_add(v1,v2)                                (0;0;0)
#define _MSL_NO_THROW                                             (0;0;0)
#define DataBlockSize 40                                          (0;0;0)
#define force_moves_f(ptr,src) _force_moves_f(ptr, src)           (0;0;0)
#define L_sub(v1,v2) _L_sub(v1,v2)                                (0;0;0)
#define mpysu(v1,v2) _mpysu(v1,v2)                                (0;0;0)
#define X_xor(v1,v2) _X_xor(v1,v2)                                (0;0;0)
#define _MSL_LONG_DOUBLE_SIZE 32                                  (0;0;0)
#define force_moves_l(ptr,src) _force_moves_l(ptr, src)           (0;0;0)
#define X_abs(v) _X_abs(v)                                        (0;0;0)
#define abs_s(v) _abs_s(v)                                        (0;0;0)
#define L_rol(val) ((val&0x80000000)?((val<<1)|1):(val<<1))       (0;0;0)
#define X_mac(X_var3,var1,var2) X_add((X_var3),X_mult((var1),(var2)))	(0;0;0)
#define syncm_read_ub(src) _syncm_read_ub(src)                    (0;0;0)
#define X_shl(v1,v2) _X_shl(v1,v2)                                (0;0;0)
#define L_ror(val) ((long int) ((val&1)?(((unsigned long) val>>1)|0x80000000):((unsigned long)val>>1)))	(0;0;0)
#define __has_feature                                             (0;0;0)
#define X_shr(v1,v2) _X_shr(v1,v2)                                (0;0;0)
#define syncm_read_ul(src) _syncm_read_ul(src)                    (0;0;0)
#define D_msu(D_var3,L_var1,L_var2) D_sub((D_var3),D_mult((L_var1),(L_var2)))	(0;0;0)
#define X_add(v1,v2) _X_add(v1,v2)                                (0;0;0)
#define _MSLGLOBALS_H                                             (0;0;0)
#define syncm_read_uw(src) _syncm_read_uw(src)                    (0;0;0)
#define mpyus(v1,v2) _mpyus(v1,v2)                                (0;0;0)
#define mpyuu(v1,v2) _mpyuu(v1,v2)                                (0;0;0)
#define debug() asm(" debug")                                     (0;0;0)
#define L_abs(v) _L_abs(v)                                        (0;0;0)
#define stdin (__get_stdin())                                     (0;0;0)
#define X_sat(v) _X_sat(v)                                        (0;0;0)
#define V_L_mult_hh_sub_round(var1,var2) _V_L_mult_hh_sub_round(var1, var2)	(0;0;0)
#define _MSL_LONGLONG 0                                           (0;0;0)
#define D_sub(v1,v2) _D_sub(v1,v2)                                (0;0;0)
#define syncm_write_b(dst,src) _syncm_write_b(dst, src)           (0;0;0)
#define L_mac(L_var3,var1,var2) (L_add(L_var3,L_mult(var1, var2)))	(0;0;0)
#define L_shl(v1,v2) _L_shl(v1,v2)                                (0;0;0)
#define D_set(v1,v2) _D_set(v1,v2)                                (0;0;0)
#define syncm_write_l(dst,src) _syncm_write_l(dst, src)           (0;0;0)
#define X_lsl(v1,v2) _X_lsl(v1,v2)                                (0;0;0)
#define L_shr(v1,v2) _L_shr(v1,v2)                                (0;0;0)
#define __std(ref) ref                                            (0;0;0)
#define L_min(v1,v2) _L_min(v1,v2)                                (0;0;0)
#define X_lsr(v1,v2) _X_lsr(v1,v2)                                (0;0;0)
#define syncm_write_w(dst,src) _syncm_write_w(dst, src)           (0;0;0)
#define L_add(v1,v2) _L_add(v1,v2)                                (0;0;0)
#define X_msu(X_var3,var1,var2) X_sub((X_var3),X_mult((var1),(var2)))	(0;0;0)
#define L_max(v1,v2) _L_max(v1,v2)                                (0;0;0)
#define _IORW 0x0100                                              (0;0;0)
#define V_L_mult_lh_sub_round(var1,var2) _V_L_mult_lh_sub_round(var1, var2)	(0;0;0)
#define L_sat(v) _L_sat(v)                                        (0;0;0)
#define round(v) _round(v)                                        (0;0;0)
#define mac_r(L_var3,var1,var2) (round(L_add(L_var3,L_mult(var1, var2))))	(0;0;0)
#define Test_Overflow() _Test_Overflow()                          (0;0;0)
#define V_imacsu2_mpy(src_vect1,src_vect2) _V_imacsu2_mpy(src_vect1, src_vect2)	(0;0;0)
#define _MSL_RESTRICT                                             (0;0;0)
#define __W_OK 4                                                  (0;0;0)
#define setPPL(v) _setPPL(v)                                      (0;0;0)
#define norm_l(v) _norm_l(v)                                      (0;0;0)
#define _MSL_CLOCK_T_AVAILABLE 1                                  (0;0;0)
#define _IOEOF 0x0040                                             (0;0;0)
#define V_max2(src_vect1,src_vect2) _max2(src_vect1, src_vect2)   (0;0;0)
#define _ENTERPRISE_C_ 1                                          (0;0;0)
#define norm_s(v) _norm_s(v)                                      (0;0;0)
#define X_mult(v1,v2) _X_mult(v1,v2)                              (0;0;0)
#define readSR(void) _readSR(void)                                (0;0;0)
#define stdout (__get_stdout())                                   (0;0;0)
#define _MSL_CONSOLE_FILE_IS_DISK_FILE 0                          (0;0;0)
#define _MSL_MALLOC_0_RETURNS_NON_NULL 0                          (0;0;0)
#define WORD16(x) ( (Word16) ( (Word32) ((x + 1.0)*((float) (1<<15))) - (1<<15)))	(0;0;0)
#define negate(v) _negate(v)                                      (0;0;0)
#define L_minu(v1,v2) _L_minu(v1,v2)                              (0;0;0)
#define MIN_16 (Word16)0x8000                                     (0;0;0)
#define _MSL_USES_SUN_MATH_LIB 1                                  (0;0;0)
#define X_norm(v) _X_norm(v)                                      (0;0;0)
#define L_maxm(v1,v2) _L_maxm(v1,v2)                              (0;0;0)
#define L_maxu(v1,v2) _L_maxu(v1,v2)                              (0;0;0)
#define _MSL_HEAP_SIZE ((TopOfStack-StackStart)*3/4)              (0;0;0)
#define va_arg(_ap,_type) ( * (_type *)((_ap) = (va_list) (_ALIGNIT(_ap, _type)) ) )	(0;0;0)
#define V_neg2(src_vect1) _V_neg2(src_vect1)                      (0;0;0)
#define WORD32(x) ((Word32)-(x*(1<<31) + 0.5))                    (0;0;0)
#define V_abs2(src_vect1) _V_abs2(src_vect1)                      (0;0;0)
#define syncio_read_ub(src) _syncio_read_ub(src)                  (0;0;0)
#define _IOBIN 0x0080                                             (0;0;0)
#define MIN_32 (Word32)0x80000000L                                (0;0;0)
#define _MSL_LOCALDATA(_a) _a                                     (0;0;0)
#define syncio_read_ul(src) _syncio_read_ul(src)                  (0;0;0)
#define __F_OK 1                                                  (0;0;0)
#define _MSL_WIDE_CHAR 1                                          (0;0;0)
#define syncm_write_ub(dst,src) _syncm_write_ub(dst, src)         (0;0;0)
#define _IOERR 0x0020                                             (0;0;0)
#define syncio_read_uw(src) _syncio_read_uw(src)                  (0;0;0)
#define __R_OK 8                                                  (0;0;0)
#define _MSL_MALLOC_IS_ALTIVEC_ALIGNED 0                          (0;0;0)
#define __X_OK 2                                                  (0;0;0)
#define syncm_write_ul(dst,src) _syncm_write_ul(dst, src)         (0;0;0)
#define _IOLBF 0x0001                                             (0;0;0)
#define mult_r(v1,v2) _mult_r(v1,v2)                              (0;0;0)
#define D_mult(v1,v2) _D_mult(v1,v2)                              (0;0;0)
#define V_asr2(src_vect) _V_asr2(src_vect)                        (0;0;0)
#define _IOFBF 0x0000                                             (0;0;0)
#define V_add2(src_vect1,src_vect2) _add2(src_vect1, src_vect2)   (0;0;0)
#define syncm_write_uw(dst,src) _syncm_write_uw(dst, src)         (0;0;0)
#define V_sad4(src1,src2,dest) V_sad41(V_dummy_read_2x32(src1, src2), dest)	(0;0;0)
#define stderr (__get_stderr())                                   (0;0;0)
#define _MW_SCC_BUILD_ 22                                         (0;0;0)
#define _MSL_FLOAT_HEX 1                                          (0;0;0)
#define V_sub2(src_vect1,src_vect2) _sub2(src_vect1, src_vect2)   (0;0;0)
#define syncio_write_b(dst,src) _syncio_write_b(dst, src)         (0;0;0)
#define read_b(addr) _read_b(addr)                                (0;0;0)
#define syncio_write_l(dst,src) _syncio_write_l(dst, src)         (0;0;0)
#define _IONBF 0x0002                                             (0;0;0)
#define MAX_16 (Word16)0x7fff                                     (0;0;0)
#define read_l(addr) _read_l(addr)                                (0;0;0)
#define syncio_write_w(dst,src) _syncio_write_w(dst, src)         (0;0;0)
#define unaligned_load(src) _unaligned_load(src)                  (0;0;0)
#define trap_d(v) _trap_d(v)                                      (0;0;0)
#define bmtset(v1,v2) _bmtset(v1,v2)                              (0;0;0)
#define V_swap(src_vect) _V_swap(src_vect)                        (0;0;0)
#define _MSL_OS_ENUM_H                                            (0;0;0)
#define va_end(_ap) (void)( _ap = (va_list)0 )                    (0;0;0)
#define _MSL_WFILEIO_AVAILABLE 0                                  (0;0;0)
#define V_asl2(src_vect) _V_asl2(src_vect)                        (0;0;0)
#define BUFSIZ 256                                                (0;0;0)
#define _MSL_USES_EXIT_PROCESS 1                                  (0;0;0)
#define br_inc(x,n) _br_inc(x, (n>>1))                            (0;0;0)
#define trap_r(v) _trap_r(v)                                      (0;0;0)
#define _MSL_END_NAMESPACE_STD                                    (0;0;0)
#define _MSL_FLOATING_POINT_IO 1                                  (0;0;0)
#define MAX_32 (Word32)0x7fffffffL                                (0;0;0)
#define _MSL_IMP_EXP_C _MSL_IMP_EXP                               (0;0;0)
#define V_min2(src_vect1,src_vect2) _min2(src_vect1, src_vect2)   (0;0;0)
#define V_lsr2(src_vect) _V_lsr2(src_vect)                        (0;0;0)
#define L_mult(v1,v2) _L_mult(v1,v2)                              (0;0;0)
#define __OFF_T                                                   (0;0;0)
#define D_round(v) _D_round(v)                                    (0;0;0)
#define TMP_MAX 25                                                (0;0;0)
#define D_cmpeq(v1,v2) _D_cmpeq(v1,v2)                            (0;0;0)
#define __MSL__ 0x00010000                                        (0;0;0)
#define V_L_mult_ll_sub(var1,var2) _V_L_mult_ll_sub(var1, var2)   (0;0;0)
#define syncio_write_ub(dst,src) _syncio_write_ub(dst, src)       (0;0;0)
#define V_X_mult_lh_sub(var1,var2) _V_X_mult_lh_sub(var1, var2)   (0;0;0)
#define V_dummy_read_32(src_vect) _V_dummy_read_32(src_vect)      (0;0;0)
#define putchar(x) fputc(x,stdout)                                (0;0;0)
#define V_L_mult_hl_add(var1,var2) _V_L_mult_hl_add(var1, var2)   (0;0;0)
#define V_X_mult_hh_add(var1,var2) _V_X_mult_hh_add(var1, var2)   (0;0;0)
#define __has_intrinsic                                           (0;0;0)
#define syncio_write_ul(dst,src) _syncio_write_ul(dst, src)       (0;0;0)
#define readOSP(void) _readOSP(void)                              (0;0;0)
#define _MSL_USING_MW_C_HEADERS 1                                 (0;0;0)
#define Extract(v1,v2) _Extract(v1,v2)                            (0;0;0)
#define syncio_write_uw(dst,src) _syncio_write_uw(dst, src)       (0;0;0)
#define getchar() fgetc(stdin)                                    (0;0;0)
#define X_round(v) _X_round(v)                                    (0;0;0)
#define _MSL_ACCURATE_BUT_LARGE_ANSI_FP 0                         (0;0;0)
#define V_swapb(src_vect) _V_swapb(src_vect)                      (0;0;0)
#define V_X_mult_hl_sub(var1,var2) _V_X_mult_hl_sub(var1, var2)   (0;0;0)
#define V_lsll2(src_vect,val) _V_lsll2(src_vect, val)             (0;0;0)
#define trap2_d(v) _trap2_d(v)                                    (0;0;0)
#define trap3_d(v) _trap3_d(v)                                    (0;0;0)
#define D_cmpgt(v1,v2) _D_cmpgt(v1,v2)                            (0;0;0)
#define trap2_r(v) _trap2_r(v)                                    (0;0;0)
#define trap3_r(v) _trap3_r(v)                                    (0;0;0)
#define V_X_mult_ll_sub(var1,var2) _V_X_mult_ll_sub(var1, var2)   (0;0;0)
#define read_2l(addr,dest1,dest2) {dest1 = read_l(addr); dest2 = read_l(addr);}	(0;0;0)
#define V_L_mult_hh_add(var1,var2) _V_L_mult_hh_add(var1, var2)   (0;0;0)
#define X_trunc(v) _X_trunc(v)                                    (0;0;0)
#define trap0_d(v) _trap0_d(v)                                    (0;0;0)
#define _SC100_ 1                                                 (0;0;0)
#define _MSL_HEAP_START (TopOfStack-_MSL_HEAP_SIZE)               (0;0;0)
#define illegal() asm(" illegal")                                 (0;0;0)
#define trap1_d(v) _trap1_d(v)                                    (0;0;0)
#define writeSR(v) _writeSR(v)                                    (0;0;0)
#define V_L_mult_hl_sub(var1,var2) _V_L_mult_hl_sub(var1, var2)   (0;0;0)
#define V_X_mult_hh_sub(var1,var2) _V_X_mult_hh_sub(var1, var2)   (0;0;0)
#define _IOREAD 0x0010                                            (0;0;0)
#define _IOTMPF 0x0200                                            (0;0;0)
#define trap0_r(v) _trap0_r(v)                                    (0;0;0)
#define _SC140_ 1                                                 (0;0;0)
#define trap1_r(v) _trap1_r(v)                                    (0;0;0)
#define _MSL_THREADSAFE 0                                         (0;0;0)
#define V_L_mult_lh_add(var1,var2) _V_L_mult_lh_add(var1, var2)   (0;0;0)
#define __STDIO                                                   (0;0;0)
#define V_avgu4(src_vect1,src_vect2) _V_avgu4(src_vect1, src_vect2)	(0;0;0)
#define V_sad41(src_vect1,src_vect2) _V_sad41(src_vect1, src_vect2)	(0;0;0)
#define debugev() asm(" debugev")                                 (0;0;0)
#define Read_64(v) *(v)                                           (0;0;0)
#define _MSL_CANT_THROW __attribute__((nothrow))                  (0;0;0)
#define read_4b(addr,d1,d2,d3,d4) {d1 = read_b(addr); d2 = read_b(addr); d3 = read_b(addr); d4 = read_b(addr);}	(0;0;0)
#define V_clip2(src_vect,imm) _V_clip2(src_vect, imm)             (0;0;0)
#define X_cmpeq(v1,v2) _X_cmpeq(v1,v2)                            (0;0;0)
#define V_L_mult_hh_sub(var1,var2) _V_L_mult_hh_sub(var1, var2)   (0;0;0)
#define __STDC_HOSTED__                                           (0;0;0)
#define norm_ll(L_var1) _norm_ll(L_var1)                          (0;0;0)
#define _MSL_STRERROR_KNOWS_ERROR_NAMES 1                         (0;0;0)
#define V_X_mult_lh_add(var1,var2) _V_X_mult_lh_add(var1, var2)   (0;0;0)
#define __starcore_bare 21                                        (0;0;0)
#define _MSL_MATH_CDECL                                           (0;0;0)
#define V_L_mult_ll_add(var1,var2) _V_L_mult_ll_add(var1, var2)   (0;0;0)
#define X_guard(v) _X_guard(v)                                    (0;0;0)
#define set2crm() _set2crm()                                      (0;0;0)
#define __L_SET 0                                                 (0;0;0)
#define V_X_mult_hl_add(var1,var2) _V_X_mult_hl_add(var1, var2)   (0;0;0)
#define V_L_mult_lh_sub(var1,var2) _V_L_mult_lh_sub(var1, var2)   (0;0;0)
#define X_cmpgt(v1,v2) _X_cmpgt(v1,v2)                            (0;0;0)
#define V_asrr2(src_vect,val) _V_asrr2(src_vect, val)             (0;0;0)
#define load_fr(v) _load_fr(v)                                    (0;0;0)
#define _MSL_USE_EXTRAS 0                                         (0;0;0)
#define V_X_mult_ll_add(var1,var2) _V_X_mult_ll_add(var1, var2)   (0;0;0)
#define V_asll2(src_vect,val) _V_asll2(src_vect, val)             (0;0;0)
#define write_b(addr,src) _write_b(addr, src)                     (0;0;0)
#define _IOABUF 0x0004                                            (0;0;0)
#define V_lsrr2(src_vect,val) _V_lsrr2(src_vect, val)             (0;0;0)
#define _Pragma                                                   (0;0;0)
#define __nec_eabi_bare 7                                         (0;0;0)
#define write_l(src1,src2) _write_l(src1, src2)                   (0;0;0)
.end_debug


.end_module "starcore_main"
